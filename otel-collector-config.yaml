receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  prometheus/collector:
    config:
      scrape_configs:
        - job_name: "opentelemetry-collector"
          static_configs:
            - targets: ["localhost:8888"]
  filelog:
    include: ["/var/log/nginx/access.log"]
    start_at: beginning  
    operators:
      - type: json_parser
        id: parse_nginx_json
        parse_from: body
    resource:
      service.name: nginx-service

processors:
  transform/filelog:
    log_statements:
      - context: log
        statements:
          - set(trace_id, attributes["trace_id"])
          - set(span_id, attributes["span_id"])
          - set(severity_text, "INFO")
          - set(time_unix_nano, attributes["timestamp"])
  batch:
    send_batch_size: 1000
    timeout: 10s
  attributes:
    actions:
      - key: app
        value: nginx
        action: insert

exporters:
  otlphttp/metrics:
    endpoint: http://localhost:9090/api/v1/otlp
    tls:
      insecure: true
  otlphttp/traces:
    endpoint: http://localhost:4418
    tls:
      insecure: true
  otlphttp/logs:
    endpoint: http://localhost:3100/otlp
    tls:
      insecure: true
  debug/metrics:
    verbosity: detailed
  debug/traces:
    verbosity: detailed
  debug/logs:
    verbosity: detailed

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/traces]
      #exporters: [otlphttp/traces,debug/traces]
    metrics:
      receivers: [otlp, prometheus/collector]
      processors: [batch]
      exporters: [otlphttp/metrics]
      #exporters: [otlphttp/metrics,debug/metrics]
    logs:
      receivers: [otlp, filelog]
      processors: [batch]
      exporters: [otlphttp/logs]
      #exporters: [otlphttp/logs,debug/logs]